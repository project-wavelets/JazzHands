[metadata]
name = jazz-hands
author = Trevor Dorn-Wallenstein et al.
author_email = tzdw@uw.edu
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://jazzhands.readthedocs.io/en/latest/index.html
description = Your one-stop-shop for quick computations with wavelets (aka little waves, aka jazz hands) on irregularly sampled data.
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = True
github_project = https://github.com/project-wavelets/JazzHands

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires =
    extension_helpers>=0.1
    numpy>=1.19.1
    scipy>=1.5.2
    astropy
    tqdm
    matplotlib
    flake8
    black
tests_require=
    pytest>=6.0.1
    pytest-cov>=2.10.1
    pytest-doctestplus>=0.8.0


[options.entry_points]
console_scripts =
    astropy-package-template-example = packagename.example_mod:main

[options.extras_require]
test =
    pytest-astropy
docs =
    sphinx-astropy

[options.package_data]
jazzhands = data/*

[tool:pytest]
testpaths = "jazzhands" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
    jazzhands/_astropy_init*
    jazzhands/conftest.py
    jazzhands/*setup_package*
    jazzhands/tests/*
    jazzhands/*/tests/*
    jazzhands/extern/*
    jazzhands/version*
    */jazzhands/_astropy_init*
    */jazzhands/conftest.py
    */jazzhands/*setup_package*
    */jazzhands/tests/*
    */jazzhands/*/tests/*
    */jazzhands/extern/*
    */jazzhands/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
